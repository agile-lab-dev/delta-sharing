name: Run Gradle on PRs
on:
  pull_request:
    branches-ignore: []
  push:
    branches:
      - main
jobs:
  gradle:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.event.pull_request.head.sha }}
      - uses: actions/setup-java@v3
        with:
          cache: 'gradle'
          distribution: temurin
          java-version: 11
      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2
      - name: Execute Gradle build
        env:
          WHITEFOX_TEST_AWS_REGION: ${{ vars.WHITEFOX_AWS_REGION }}
          WHITEFOX_TEST_AWS_ACCESS_KEY_ID: ${{ secrets.WHITEFOX_AWS_ACCESS_KEY_ID }}
          WHITEFOX_TEST_AWS_SECRET_ACCESS_KEY: ${{ secrets.WHITEFOX_AWS_SECRET_ACCESS_KEY }}
        run:  |
              if [ "$RUNNER_OS" == "Windows" ]; then
                export HADOOP_HOME="$(pwd)/.github/workflows/hadoop3-win-binaries"
              fi
              ./gradlew clean build testNative --no-daemon
              ./gradlew server:app:printVersion --no-daemon -q
        shell: bash
      - name: Run integration test
        shell: bash
        env:
          WHITEFOX_TEST_AWS_REGION: ${{ vars.WHITEFOX_AWS_REGION }}
          WHITEFOX_TEST_AWS_ACCESS_KEY_ID: ${{ secrets.WHITEFOX_AWS_ACCESS_KEY_ID }}
          WHITEFOX_TEST_AWS_SECRET_ACCESS_KEY: ${{ secrets.WHITEFOX_AWS_SECRET_ACCESS_KEY }}
        run: |
          WHITEFOX_SERVER_AUTHENTICATION_ENABLED=TRUE \
          WHITEFOX_SERVER_AUTHENTICATION_BEARERTOKEN=token \
          java -jar server/app/build/quarkus-app/quarkus-run.jar &
          ./gradlew :client-spark:clientSparkTest --no-daemon
          kill -9 %1
      - name: Build container image
        if: runner.os == 'Linux'
        run: |
              if [[ "${{github.ref}}" == "refs/heads/main" ]]; then
                export QUARKUS_CONTAINER_IMAGE_ADDITIONAL_TAGS="latest"
              fi
              ./gradlew server:app:build --no-daemon -Dquarkus.container-image.build=true
        shell: bash
      - name: Login to ghcr
        if: runner.os == 'Linux'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Push existing image to registry
        if: runner.os == 'Linux'
        run: docker image push -a ghcr.io/agile-lab-dev/io.whitefox.server 
        shell: bash